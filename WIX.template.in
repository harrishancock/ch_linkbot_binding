<?xml version="1.0" encoding="UTF-8"?>

<?include "cpack_variables.wxi"?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
    RequiredVersion="3.6.3303.0">

    <Product Id="$(var.CPACK_WIX_PRODUCT_GUID)"
        Name="$(var.CPACK_PACKAGE_NAME)"
        Language="1033"
        Version="$(var.CPACK_PACKAGE_VERSION)"
        Manufacturer="$(var.CPACK_PACKAGE_VENDOR)"
        UpgradeCode="$(var.CPACK_WIX_UPGRADE_GUID)">

        <!-- Barobo change: use Windows Installer 4.5 -->
        <Package InstallerVersion="405" Compressed="yes"/>

        <Media Id="1" Cabinet="media1.cab" EmbedCab="yes"/>

        <MajorUpgrade
            Schedule="afterInstallInitialize"
            AllowSameVersionUpgrades="yes"
            DowngradeErrorMessage="A later version of [ProductName] is already installed. Setup will now exit."/>

        <WixVariable Id="WixUILicenseRtf" Value="$(var.CPACK_WIX_LICENSE_RTF)"/>
        <Property Id="WIXUI_INSTALLDIR" Value="INSTALL_ROOT"/>

        <!-- Barobo change: Install into %CHHOME%\package instead of Program
             Files. -->
        <Property Id="CHPROFESSIONAL">
            <RegistrySearch Id="ChProfessional"
                            Root="HKLM"
                            Key="SOFTWARE\SoftIntegration\SoftIntegration Ch Professional"
                            Name="PathName"
                            Type="raw" />
        </Property>
        <Property Id="CHSTANDARD">
            <RegistrySearch Id="ChStandard"
                            Root="HKLM"
                            Key="SOFTWARE\SoftIntegration\SoftIntegration Ch Standard"
                            Name="PathName"
                            Type="raw" />
        </Property>
        <Property Id="CHSTUDENT">
            <RegistrySearch Id="ChStudent"
                            Root="HKLM"
                            Key="SOFTWARE\SoftIntegration\SoftIntegration Ch Student"
                            Name="PathName"
                            Type="raw" />
        </Property>
        <Condition Message="Ch must be installed prior to the Linkbot Ch package.">
            CHSTUDENT OR CHPROFESSIONAL OR CHSTANDARD
        </Condition>
        <SetDirectory Id="INSTALL_ROOT" Action="Set_PROFESSIONAL_INSTALL_ROOT"
                      Value="[CHPROFESSIONAL]\package\professional" Sequence="first">
            CHPROFESSIONAL
        </SetDirectory>
        <SetDirectory Id="INSTALL_ROOT" Action="Set_STANDARD_INSTALL_ROOT"
                      Value="[CHSTANDARD]\package\standard" Sequence="first">
            CHSTANDARD
        </SetDirectory>
        <SetDirectory Id="INSTALL_ROOT" Action="Set_STUDENT_INSTALL_ROOT"
                      Value="[CHSTUDENT]\package\student" Sequence="first">
            CHSTUDENT
        </SetDirectory>

        <!-- Barobo change: Uninstall BaroboLink, if present. -->
        <Property Id="BAROBOLINKUNINSTALLER">
            <RegistrySearch Id="BaroboLinkUninstaller"
                            Root="HKLM"
                            Key="SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\BaroboLink"
                            Name="UninstallString"
                            Type="raw" />
        </Property>
        <!-- If BaroboLink is installed and we don't have a full UI, abort. -->
        <Condition Message="BaroboLink must be uninstalled prior to installing this package.">
            NOT BAROBOLINKUNINSTALLER OR (BAROBOLINKUNINSTALLER AND UILevel = 5)
        </Condition>

        <CustomAction Id="PrepareUninstallBaroboLink"
                      Property="NSISPACKAGEUNINSTALLER"
                      Value="[BAROBOLINKUNINSTALLER]"/>
        <CustomAction Id="UninstallNsisPackage"
                      BinaryKey="BaroboCustomActions"
                      DllEntry="uninstallNsisPackage"/>

        <!-- Depressing hack. :( -->
        <Binary Id="BaroboCustomActions" SourceFile="$(env.BAROBO_CUSTOM_ACTIONS_DLL)"/>

        <InstallExecuteSequence>
            <!-- If BaroboLink is installed and we have a full UI, run the uninstaller. -->
            <Custom Action="PrepareUninstallBaroboLink" Before="UninstallNsisPackage">
                BAROBOLINKUNINSTALLER AND UILevel = 5
            </Custom>
            <Custom Action="UninstallNsisPackage" Before="CostInitialize">
                NSISPACKAGEUNINSTALLER
            </Custom>
        </InstallExecuteSequence>

        <?ifdef CPACK_WIX_PRODUCT_ICON?>
        <Property Id="ARPPRODUCTICON">ProductIcon.ico</Property>
        <Icon Id="ProductIcon.ico" SourceFile="$(var.CPACK_WIX_PRODUCT_ICON)"/>
        <?endif?>

        <?ifdef CPACK_WIX_UI_BANNER?>
        <WixVariable Id="WixUIBannerBmp" Value="$(var.CPACK_WIX_UI_BANNER)"/>
        <?endif?>

        <?ifdef CPACK_WIX_UI_DIALOG?>
        <WixVariable Id="WixUIDialogBmp" Value="$(var.CPACK_WIX_UI_DIALOG)"/>
        <?endif?>

        <FeatureRef Id="ProductFeature"/>

        <UIRef Id="$(var.CPACK_WIX_UI_REF)" />

        <?include "properties.wxi"?>
    </Product>
</Wix>
